1. Explain why it would be difficult to use a brute force algorithm to solve this problem if there were 30 different egg weights. 
You do not need to implement a brute force algorithm in order to answer this
Sol) It is practically impossible to implement brute force algorithm to solve this problem. Even if we have 4 different weights then 
each weight can typically take a maximum of math.ceil(N/weight) eggs. i.e in our example, weight 25 can take math.ceil(99/25) = 4 weights, 
10 can take maximum of math.ceil(99/10) = 10 weights, 5 can take a maximum of math.ceil(99/5) = 20 weights and 1 can take a maximum of math.
ceil(99/1) = 99 weights. Thus all possible combinations are 4*10*20*99 which is in exponential in N. Now if the number of weights are 30, 
then the total combinations are too huge to compute.

2.   If you were to implement a greedy algorithm for finding the minimum number of eggs needed, what would the objective function be?
What would the constraints be? What strategy would your greedy algorithm follow to pick which coins to take? You do not need to implement
a greedy algorithm in order to answer this. 
Sol) First sort the weights in reverse order and then the obecjective function is to maximise the largest weight eggs/coins, subject to the
condition that total eggs weight should not exceed the target_weight. First it will pick the maximum largest weight eggs it can pick 
without exceeding the target_weight and then fill the remaining weight by picking the maximum number of 2nd largest weights and so on..

3.  Will a greedy algorithm always return the optimal solution to this problem? Explain why it is optimal or give an example of when it
will not return the optimal solution. Again, you do not need to implement a greedy algorithm in order to answer this. 
Sol) In this question the greedy algorithm will always return the optimal solution as we are not trying to maximise/minimise any other 
variable apart from weight which is also our constraint variable. In other words since our constraint is putting a limit on total weight 
allowed and our objective function is minimising the number of weights, it is 1 variable problem about weights. Thus we will always find 
the global solution. If however, we are given that each weight has a different value and we are asked to maximise the value, then it is a
2 variable problem (weight, value) and there is no direct relation between the constraint variable (weight) and the objective function
variable(value). Thus we can only find a local optima solution based on the objective function.
